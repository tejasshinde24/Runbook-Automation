# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "runbook_v2" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
  
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Py Lambda Deploy
        # You may pin to the exact commit or the version.
        # uses: mariamrf/py-lambda-action@5c8e766725fc5efcbb4cf2ca807666026a9530fc
        uses: mariamrf/py-lambda-action@1.0.1
        env:
          # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          # or if using AWS credentials directly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          # the name/path to the requirements.txt file
          requirements_txt: requirements.txt
          # The ARN for the Lambda layer the dependencies should be pushed to without the version (every push is a new version).
          # lambda_layer_arn: 
          # The Lambda function name. Check the AWS docs/readme for examples.
          lambda_function_name: sre-sqs-outmsg-age-runbook-automation
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
